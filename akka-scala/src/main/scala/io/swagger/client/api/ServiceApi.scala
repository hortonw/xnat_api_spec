/**
 * /data to /xapi Refactoring
 * These API endpoints are refactored from XNAT's endpoints in [/data, /service, and /AjaxServlet]
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@xnat.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.JsonList
import io.swagger.client.model.JsonParam
import io.swagger.client.model.ParJson
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ServiceApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 201 :  (Created)
   *   code 504 :  (Permission Denied)
   * 
   * @param model Project Access Request
   */
  def createPar(model: JsonParam): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://localhost", "/xapi/service/pars", "application/json")
      .withBody(model)
      .withSuccessResponse[Unit](201)
      .withErrorResponse[Unit](504)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 :  (PAR Deleted)
   * 
   * @param id PAR ID
   */
  def deletePar(id: Int): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://localhost", "/xapi/service/pars/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[Unit](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[ParJson] (Individual PAR)
   * 
   * @param id PAR ID
   */
  def getPar(id: Int): ApiRequest[Seq[ParJson]] =
    ApiRequest[Seq[ParJson]](ApiMethods.GET, "https://localhost", "/xapi/service/pars/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[Seq[ParJson]](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[JsonList] (List of PARS)
   * 
   * @param projectId Filter on Project ID
   * @param status Filter on PAR Status
   */
  def listPars(projectId: Option[String] = None, status: Option[String] = None): ApiRequest[Seq[JsonList]] =
    ApiRequest[Seq[JsonList]](ApiMethods.GET, "https://localhost", "/xapi/service/pars", "application/json")
      .withQueryParam("projectId", projectId)
      .withQueryParam("status", status)
      .withSuccessResponse[Seq[JsonList]](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 :  (PAR Updated)
   * 
   * @param id PAR ID
   * @param accept Accept Request
   * @param reject Reject Request
   * @param cancel Cancel Request
   */
  def updatePar(id: Int, accept: Option[Boolean] = None, reject: Option[Boolean] = None, cancel: Option[Boolean] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "https://localhost", "/xapi/service/pars/{id}", "application/json")
      .withQueryParam("accept", accept)
      .withQueryParam("reject", reject)
      .withQueryParam("cancel", cancel)
      .withPathParam("id", id)
      .withSuccessResponse[Unit](201)
      

}

